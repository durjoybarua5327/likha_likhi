টাইম এবং স্পেস কমপ্লেক্সিটি: একটি সহজ ব্যাখ্যা
অনেকের মধ্যে টাইম কমপ্লেক্সিটি নিয়ে ধারণা নেই বা থাকলেও তারা জানে না যে টাইম বা স্পেস কমপ্লেক্সিটি কী? আসুন এই বিষয়টা 
একটি সহজ উদাহরণের মাধ্যমে বুঝে নিই।
উদাহরণ ১: ধরা যাক, আপনি একটি অ্যাপ ইনস্টল করেছেন আপনার ডিভাইসে, যার সাইজ ২GB এবং অ্যাপটি সম্পূর্ণরূপে চালু হতে ২ মিনিট সময় নিচ্ছে।
এখানে:
•	স্পেস কমপ্লেক্সিটি হলো অ্যাপের সাইজ অর্থাৎ ২GB।
•	টাইম কমপ্লেক্সিটি হলো অ্যাপটি সম্পূর্ণভাবে চালু হতে সময়, অর্থাৎ ২ মিনিট।
সাধারণত, আমরা টাইম কমপ্লেক্সিটিকেই বেশি গুরুত্ব দেই, কিন্তু স্পেস কমপ্লেক্সিটির গুরুত্বও রয়েছে।
উদাহরণ ২: ধরা যাক, আপনার কাছে দুটি অ্যাপ আছে:
•	অ্যাপ-১: সাইজ ১০০MB তবে এটি ওপেন হতে ৩০ মিনিট সময় নেয়।
•	অ্যাপ-২: সাইজ ১GB কিন্তু এটি ওপেন হতে ২ মিনিট সময় নেয়।
আপনি কোন অ্যাপটি ব্যবহার করবেন? অবশ্যই অ্যাপ-২ কারণ এটি বড় সাইজ হলেও কম সময়ে সার্ভিস দিচ্ছে। এর মাধ্যমে বুঝা যায়
কেন আমরা টাইম কমপ্লেক্সিটিকে বেশি গুরুত্ব দেই।
যদিও, যখন আমরা যখন কোন প্রোগ্রাম লিখি তখন আমাদের উভয় দিকে (টাইম এবং স্পেস) প্রতি খেয়াল রাখতে হবে অথবা প্রোগ্রামের সমস্যার 
স্টেট্মেন্ট অনুসারে কমপ্লেক্সিটি কোনটিকে গুরুত্ব বেশি হবে সেটা নির্ধারণ হবে।
ইনপুট সেম্পল এবং টাইম কমপ্লেক্সিটি
 
আমরা যখন কোনো সমস্যা সমাধান করি তখন নিচে কিছু ইনপুট সেম্পল দেওয়া থাকে। এই সেম্পলগুলো সাধারণত ২-৩টি উদাহরণ হিসেবে দেওয়া হয়। 
তবে বাস্তবে বেকএন্ডে অনেক বেশি ইনপুট থাকতে পারে প্রব্লেম স্টেট্মেন্টে সেটা উল্লেখ থাকবে যেমন:
•	ইনপুট সাইজ: ধরা যাক, nums = [4,1,2,5,3,6,9......] যেখানে ১০^৪ মানে ১০ হাজার সংখ্যা দেওয়া থাকবে একটি ইনপুটে।
আমরা সেগুলো নিয়ে চিন্তা না করলেও আসল সমস্যা তখন শুরু হয় যখন ইনপুট সাইজ বড় হয়। উদাহরণস্বরূপ, আমাদের পিসি বা ল্যাপটপ ১০^৬ বা ১০^৭
সংখ্যার জন্য এক সেকেন্ডে একটি লুপ চালাতে সক্ষম। এর মানে:
•	১০^৬ ইনপুটের জন্য ১ সেকেন্ড,
•	১০^৭ ইনপুটের জন্য ১০ সেকেন্ড,
•	১০^৮ ইনপুটের জন্য ১০০ সেকেন্ড।
এখন যদি আমি তোমাদের প্রশ্ন করি যে, নিচের কোডটির টাইম কমপ্লেক্সিটি কত হবে যদি numbers এর সাইজ ১০^৪ হয়?
for (int i = 0; i < numbers.size(); i++) {
}
এটা এক্সিকিউট হতে কত সময় নিবে? সাইজ ১০^৪ হলে, এটি ১ সেকেন্ডেরও কম সময় নিবে (আমি উপরে এই হিসাবটি দেখিয়েছেন চাইলে নিজে বেসিক ক্যাল্কুলেশন করে দেখতে পারেন)
নেস্টেড লুপ এবং টাইম কমপ্লেক্সিটি
যাহোক এখন যদি আমি আপনাদের একটা প্রশ্ন করি যে সব প্রবলেমের সলিউশন কি একটা লুপ দিয়ে করা যায়? অবশ্যই না বেশির ভাগ সময় আমাদের নেস্টেট লুপ লাগে মানে একের অধিক। আমাদের নেস্টেড লুপ (একাধিক লুপ) ব্যবহার করতে হয়।
 ধরা যাক আপনি নিচের কোডটির টাইম কমপ্লেক্সিটি কত তা হিসাব করতে চান যেখানে numbers এর সাইজ ১০^৪:
for (int i = 0; i < numbers.size(); i++) {
    for (int i = 0; i < numbers.size(); i++) {
    }
}
এখানে:
১                টা         ইনপুটের        জন্য          ইননার-লুপ          চলে            10^4
10^4          ||               ||                   ||                   ||                      ||       (10^4   *10^ 4 )
					        = 10^8এটা এক্সিকিউট হতে ১০০ সেকেন্ড সময় নিবে

অর্থাৎ প্রায় ১ মিনিট ৪০ সেকেন্ড। (এই টাইম কমপ্লেক্সিটিকে O(108) বা O(n2)  বলে লিখা হয়)।
10^8 কমপ্লেক্সিটির কোড প্রায় সব ক্ষেত্রেই অপটিমাল নয়। এই ধরনের কোড প্রোগ্রামিং কনটেস্টে টাইম লিমিট অতিক্রম করে। সমাধান হলো এফিসিয়েন্ট অ্যালগরিদম ব্যবহার করা (যেমন: O(n log n) বা O(n) কমপ্লেক্সিটি)।
